// <auto-generated />
using System;
using Dot.Net.WebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(LocalDbContext))]
    [Migration("20231208225814_userModel hashedPassword")]
    partial class userModelhashedPassword
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Models.BidModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ask")
                        .HasColumnType("float");

                    b.Property<double>("askQuantity")
                        .HasColumnType("float");

                    b.Property<double>("bid")
                        .HasColumnType("float");

                    b.Property<double>("bidQuantity")
                        .HasColumnType("float");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bid");
                });

            modelBuilder.Entity("WebApi.Models.CurvePointModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("asOfDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("cureveId")
                        .HasColumnType("int");

                    b.Property<double>("term")
                        .HasColumnType("float");

                    b.Property<double>("value")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("CurvePoint");
                });

            modelBuilder.Entity("WebApi.Models.RatingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("fitchRaing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("moodysRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("orderNumber")
                        .HasColumnType("int");

                    b.Property<string>("sandPRating")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("WebApi.Models.RuleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("descripton")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("json")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sqlPart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sqlStr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("template")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rule");
                });

            modelBuilder.Entity("WebApi.Models.TradeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("benchmark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("book")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("buyPrice")
                        .HasColumnType("float");

                    b.Property<double>("buyQuantity")
                        .HasColumnType("float");

                    b.Property<DateTime>("creationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("creationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dealName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dealType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("revisionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("revisionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("security")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("sellPrice")
                        .HasColumnType("float");

                    b.Property<double>("sellQuantity")
                        .HasColumnType("float");

                    b.Property<string>("side")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sourceListId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("tradeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("trader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Trade");
                });

            modelBuilder.Entity("WebApi.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("hashedPassword")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("salt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("userName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("userName")
                        .IsUnique()
                        .HasFilter("[userName] IS NOT NULL");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
